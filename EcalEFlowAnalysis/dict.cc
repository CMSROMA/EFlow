//
// File generated by rootcint at Wed Apr 11 18:28:58 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::JSON JSON;
      #else
      class JSON  {
         public:
         //friend XX;
         typedef ::pair<int,int> aLSSegment;
         typedef ::std::vector< ::pair<int,int>, ::allocator< ::pair<int,int> > > GoodLSVector;
         typedef ::std::map<int, ::vector< ::pair<int,int>, ::allocator< ::pair<int,int> > >, ::less<int>, ::allocator< ::pair<const int, ::vector< ::pair<int,int>, ::allocator< ::pair<int,int> > > > > > LSRange;
         typedef ::pair<int, ::vector< ::pair<int,int>, ::allocator< ::pair<int,int> > > > LSRangeElement;
         int oldRun; //
         LSRange goodLS_; //
         ::map< int, vector< pair< int, int >, allocator< pair< int, int >  >  >, ::less< int >, allocator< pair< const int, vector< pair< int, int >, allocator< pair< int, int >  >  >  >  >  >::iterator goodLSCache_; //ptr to list of good LS for last run
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::alcaPhiSym_tree_v3 alcaPhiSym_tree_v3;
      #else
      class alcaPhiSym_tree_v3  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~alcaPhiSym_tree_v3() throw() {};
         ::TTree* fChain; //!pointer to the analyzed TTree or TChain
         int fCurrent; //!current Tree number in a TChain
         unsigned int nhit_barl; //
         int HLTNamesLen; //
         vector< ::string >* HLTNames; //
         vector< bool >* HLTResults; //
         int nL1bits; //
         int L1bits[128]; //[nL1bits]
         int nL1bitsTech; //
         int L1bitsTech[64]; //[nL1bitsTech]
         float vxMC; //
         float vyMC; //
         float vzMC; //
         unsigned int nvertex; //
         float beamSpotX0; //
         float beamSpotY0; //
         float beamSpotZ0; //
         float beamSpotSigmaX; //
         float beamSpotSigmaY; //
         float beamSpotSigmaZ; //
         int ieta[1000]; //[nhit_barl]
         int iphi[1000]; //[nhit_barl]
         float lc_barl[1000]; //[nhit_barl]
         float alpha_barl[1000]; //[nhit_barl]
         float et_barl[1000]; //[nhit_barl]
         unsigned int unixtime; //
         unsigned int run; //
         unsigned int lumi; //
         unsigned int eventid; //
         unsigned int nhit_endc; //
         int ix[1000]; //[nhit_endc]
         int iy[1000]; //[nhit_endc]
         unsigned int sign[1000]; //[nhit_endc]
         float lc_endc[1000]; //[nhit_endc]
         float alpha_endc[1000]; //[nhit_endc]
         float et_endc[1000]; //[nhit_endc]
         ::TBranch* b_nhit_barl; //!
         ::TBranch* b_HLTNamesLen; //!
         ::TBranch* b_HLTNames; //!
         ::TBranch* b_HLTResults; //!
         ::TBranch* b_nL1bits; //!
         ::TBranch* b_L1bits; //!
         ::TBranch* b_nL1bitsTech; //!
         ::TBranch* b_L1bitsTech; //!
         ::TBranch* b_vxMC; //!
         ::TBranch* b_vyMC; //!
         ::TBranch* b_vzMC; //!
         ::TBranch* b_nvertex; //!
         ::TBranch* b_beamSpotX0; //!
         ::TBranch* b_beamSpotY0; //!
         ::TBranch* b_beamSpotZ0; //!
         ::TBranch* b_beamSpotSigmaX; //!
         ::TBranch* b_beamSpotSigmaY; //!
         ::TBranch* b_beamSpotSigmaZ; //!
         ::TBranch* b_ieta; //!
         ::TBranch* b_iphi; //!
         ::TBranch* b_lc_barl; //!
         ::TBranch* b_alpha_barl; //!
         ::TBranch* b_et_barl; //!
         ::TBranch* b_unixtime; //!
         ::TBranch* b_run; //!
         ::TBranch* b_lumi; //!
         ::TBranch* b_eventid; //!
         ::TBranch* b_nhit_endc; //!
         ::TBranch* b_ix; //!
         ::TBranch* b_iy; //!
         ::TBranch* b_sign; //!
         ::TBranch* b_lc_endc; //!
         ::TBranch* b_alpha_endc; //!
         ::TBranch* b_et_endc; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lumiIntervals lumiIntervals;
      #else
      class lumiIntervals  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::lumiIntervals::runLS runLS;
         #else
         class runLS  {
            public:
            //friend XX;
            int run; //
            int ls; //
         };
         #endif

         typedef ::pair< ::lumiIntervals::runLS, ::lumiIntervals::runLS> interval_t;
         vector< interval_t > intervals; //
         vector< int > intervals_time; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::createHistoryPlots createHistoryPlots;
      #else
      class createHistoryPlots  :  public ::alcaPhiSym_tree_v3 {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::createHistoryPlots::histos histos;
         #else
         class histos  {
            public:
            //friend XX;
            float energySum[85][360][2]; //
            float energySquared[85][360][2]; //
            float energySumA[85][360][2]; //
            float energySquaredA[85][360][2]; //
            float energySumB[85][360][2]; //
            float energySquaredB[85][360][2]; //
            float energyNoCorrSum[85][360][2]; //
            float energyNoCorrSquared[85][360][2]; //
            float energyNoCorrSumA[85][360][2]; //
            float energyNoCorrSquaredA[85][360][2]; //
            float energyNoCorrSumB[85][360][2]; //
            float energyNoCorrSquaredB[85][360][2]; //
            float lasercorrSum[85][360][2]; //
            float lasercorrSquared[85][360][2]; //
            int counter[85][360][2]; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~createHistoryPlots() throw() {};
         ::lumiIntervals* intervals; //
         ::JSON* goodLS; //
         ::TString outFileName; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JSON_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void JSON_Dictionary();
   static void delete_JSON(void *p);
   static void deleteArray_JSON(void *p);
   static void destruct_JSON(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JSON*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::JSON) == sizeof(::ROOT::Shadow::JSON));
      ::JSON *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::JSON),0);
      static ::ROOT::TGenericClassInfo 
         instance("JSON", "./JSON.h", 7,
                  typeid(::JSON), DefineBehavior(ptr, ptr),
                  &JSON_ShowMembers, &JSON_Dictionary, isa_proxy, 4,
                  sizeof(::JSON) );
      instance.SetDelete(&delete_JSON);
      instance.SetDeleteArray(&deleteArray_JSON);
      instance.SetDestructor(&destruct_JSON);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JSON*)
   {
      return GenerateInitInstanceLocal((::JSON*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JSON*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void JSON_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::JSON*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void alcaPhiSym_tree_v3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void alcaPhiSym_tree_v3_Dictionary();
   static void *new_alcaPhiSym_tree_v3(void *p = 0);
   static void *newArray_alcaPhiSym_tree_v3(Long_t size, void *p);
   static void delete_alcaPhiSym_tree_v3(void *p);
   static void deleteArray_alcaPhiSym_tree_v3(void *p);
   static void destruct_alcaPhiSym_tree_v3(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::alcaPhiSym_tree_v3*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::alcaPhiSym_tree_v3) == sizeof(::ROOT::Shadow::alcaPhiSym_tree_v3));
      ::alcaPhiSym_tree_v3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::alcaPhiSym_tree_v3),0);
      static ::ROOT::TGenericClassInfo 
         instance("alcaPhiSym_tree_v3", "./alcaPhiSym_tree_v3.h", 17,
                  typeid(::alcaPhiSym_tree_v3), DefineBehavior(ptr, ptr),
                  &alcaPhiSym_tree_v3_ShowMembers, &alcaPhiSym_tree_v3_Dictionary, isa_proxy, 4,
                  sizeof(::alcaPhiSym_tree_v3) );
      instance.SetNew(&new_alcaPhiSym_tree_v3);
      instance.SetNewArray(&newArray_alcaPhiSym_tree_v3);
      instance.SetDelete(&delete_alcaPhiSym_tree_v3);
      instance.SetDeleteArray(&deleteArray_alcaPhiSym_tree_v3);
      instance.SetDestructor(&destruct_alcaPhiSym_tree_v3);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::alcaPhiSym_tree_v3*)
   {
      return GenerateInitInstanceLocal((::alcaPhiSym_tree_v3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::alcaPhiSym_tree_v3*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void alcaPhiSym_tree_v3_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::alcaPhiSym_tree_v3*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void lumiIntervals_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lumiIntervals_Dictionary();
   static void delete_lumiIntervals(void *p);
   static void deleteArray_lumiIntervals(void *p);
   static void destruct_lumiIntervals(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lumiIntervals*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lumiIntervals) == sizeof(::ROOT::Shadow::lumiIntervals));
      ::lumiIntervals *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lumiIntervals),0);
      static ::ROOT::TGenericClassInfo 
         instance("lumiIntervals", "./lumiIntervals.h", 6,
                  typeid(::lumiIntervals), DefineBehavior(ptr, ptr),
                  &lumiIntervals_ShowMembers, &lumiIntervals_Dictionary, isa_proxy, 4,
                  sizeof(::lumiIntervals) );
      instance.SetDelete(&delete_lumiIntervals);
      instance.SetDeleteArray(&deleteArray_lumiIntervals);
      instance.SetDestructor(&destruct_lumiIntervals);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lumiIntervals*)
   {
      return GenerateInitInstanceLocal((::lumiIntervals*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lumiIntervals*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lumiIntervals_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lumiIntervals*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void createHistoryPlots_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void createHistoryPlots_Dictionary();
   static void *new_createHistoryPlots(void *p = 0);
   static void *newArray_createHistoryPlots(Long_t size, void *p);
   static void delete_createHistoryPlots(void *p);
   static void deleteArray_createHistoryPlots(void *p);
   static void destruct_createHistoryPlots(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::createHistoryPlots*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::createHistoryPlots) == sizeof(::ROOT::Shadow::createHistoryPlots));
      ::createHistoryPlots *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::createHistoryPlots),0);
      static ::ROOT::TGenericClassInfo 
         instance("createHistoryPlots", "./createHistoryPlots.h", 26,
                  typeid(::createHistoryPlots), DefineBehavior(ptr, ptr),
                  &createHistoryPlots_ShowMembers, &createHistoryPlots_Dictionary, isa_proxy, 4,
                  sizeof(::createHistoryPlots) );
      instance.SetNew(&new_createHistoryPlots);
      instance.SetNewArray(&newArray_createHistoryPlots);
      instance.SetDelete(&delete_createHistoryPlots);
      instance.SetDeleteArray(&deleteArray_createHistoryPlots);
      instance.SetDestructor(&destruct_createHistoryPlots);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::createHistoryPlots*)
   {
      return GenerateInitInstanceLocal((::createHistoryPlots*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::createHistoryPlots*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void createHistoryPlots_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::createHistoryPlots*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void JSON_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class JSON.
      typedef ::ROOT::Shadow::JSON ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::JSON*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oldRun", &sobj->oldRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodLS_", (void*)&sobj->goodLS_);
      R__insp.InspectMember("JSON::LSRange", (void*)&sobj->goodLS_, "goodLS_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodLSCache_", (void*)&sobj->goodLSCache_);
      R__insp.InspectMember("map<int,vector<pair<int,int>,allocator<pair<int,int> > >,less<int>,allocator<pair<const int,vector<pair<int,int>,allocator<pair<int,int> > > > > >::const_iterator", (void*)&sobj->goodLSCache_, "goodLSCache_.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_JSON(void *p) {
      delete ((::JSON*)p);
   }
   static void deleteArray_JSON(void *p) {
      delete [] ((::JSON*)p);
   }
   static void destruct_JSON(void *p) {
      typedef ::JSON current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JSON

//______________________________________________________________________________
namespace ROOT {
   void lumiIntervals_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lumiIntervals.
      typedef ::ROOT::Shadow::lumiIntervals ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lumiIntervals*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervals", (void*)&sobj->intervals);
      R__insp.InspectMember("vector<interval_t>", (void*)&sobj->intervals, "intervals.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervals_time", (void*)&sobj->intervals_time);
      R__insp.InspectMember("vector<int>", (void*)&sobj->intervals_time, "intervals_time.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_lumiIntervals(void *p) {
      delete ((::lumiIntervals*)p);
   }
   static void deleteArray_lumiIntervals(void *p) {
      delete [] ((::lumiIntervals*)p);
   }
   static void destruct_lumiIntervals(void *p) {
      typedef ::lumiIntervals current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lumiIntervals

//______________________________________________________________________________
namespace ROOT {
   void alcaPhiSym_tree_v3_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class alcaPhiSym_tree_v3.
      typedef ::ROOT::Shadow::alcaPhiSym_tree_v3 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::alcaPhiSym_tree_v3*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &sobj->fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &sobj->fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhit_barl", &sobj->nhit_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLTNamesLen", &sobj->HLTNamesLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HLTNames", &sobj->HLTNames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HLTResults", &sobj->HLTResults);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nL1bits", &sobj->nL1bits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1bits[128]", sobj->L1bits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nL1bitsTech", &sobj->nL1bitsTech);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1bitsTech[64]", sobj->L1bitsTech);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vxMC", &sobj->vxMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vyMC", &sobj->vyMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vzMC", &sobj->vzMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvertex", &sobj->nvertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotX0", &sobj->beamSpotX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotY0", &sobj->beamSpotY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotZ0", &sobj->beamSpotZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotSigmaX", &sobj->beamSpotSigmaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotSigmaY", &sobj->beamSpotSigmaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamSpotSigmaZ", &sobj->beamSpotSigmaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ieta[1000]", sobj->ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iphi[1000]", sobj->iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lc_barl[1000]", sobj->lc_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_barl[1000]", sobj->alpha_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et_barl[1000]", sobj->et_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "unixtime", &sobj->unixtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumi", &sobj->lumi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventid", &sobj->eventid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhit_endc", &sobj->nhit_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ix[1000]", sobj->ix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iy[1000]", sobj->iy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sign[1000]", sobj->sign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lc_endc[1000]", sobj->lc_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_endc[1000]", sobj->alpha_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et_endc[1000]", sobj->et_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nhit_barl", &sobj->b_nhit_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_HLTNamesLen", &sobj->b_HLTNamesLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_HLTNames", &sobj->b_HLTNames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_HLTResults", &sobj->b_HLTResults);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nL1bits", &sobj->b_nL1bits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_L1bits", &sobj->b_L1bits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nL1bitsTech", &sobj->b_nL1bitsTech);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_L1bitsTech", &sobj->b_L1bitsTech);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vxMC", &sobj->b_vxMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vyMC", &sobj->b_vyMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vzMC", &sobj->b_vzMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nvertex", &sobj->b_nvertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotX0", &sobj->b_beamSpotX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotY0", &sobj->b_beamSpotY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotZ0", &sobj->b_beamSpotZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotSigmaX", &sobj->b_beamSpotSigmaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotSigmaY", &sobj->b_beamSpotSigmaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_beamSpotSigmaZ", &sobj->b_beamSpotSigmaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ieta", &sobj->b_ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_iphi", &sobj->b_iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lc_barl", &sobj->b_lc_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_alpha_barl", &sobj->b_alpha_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_et_barl", &sobj->b_et_barl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_unixtime", &sobj->b_unixtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_run", &sobj->b_run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lumi", &sobj->b_lumi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_eventid", &sobj->b_eventid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nhit_endc", &sobj->b_nhit_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ix", &sobj->b_ix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_iy", &sobj->b_iy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_sign", &sobj->b_sign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lc_endc", &sobj->b_lc_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_alpha_endc", &sobj->b_alpha_endc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_et_endc", &sobj->b_et_endc);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_alcaPhiSym_tree_v3(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::alcaPhiSym_tree_v3 : new ::alcaPhiSym_tree_v3;
   }
   static void *newArray_alcaPhiSym_tree_v3(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::alcaPhiSym_tree_v3[nElements] : new ::alcaPhiSym_tree_v3[nElements];
   }
   // Wrapper around operator delete
   static void delete_alcaPhiSym_tree_v3(void *p) {
      delete ((::alcaPhiSym_tree_v3*)p);
   }
   static void deleteArray_alcaPhiSym_tree_v3(void *p) {
      delete [] ((::alcaPhiSym_tree_v3*)p);
   }
   static void destruct_alcaPhiSym_tree_v3(void *p) {
      typedef ::alcaPhiSym_tree_v3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::alcaPhiSym_tree_v3

//______________________________________________________________________________
namespace ROOT {
   void createHistoryPlots_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class createHistoryPlots.
      typedef ::ROOT::Shadow::createHistoryPlots ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::createHistoryPlots*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*intervals", &sobj->intervals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*goodLS", &sobj->goodLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", &sobj->outFileName);
      R__insp.InspectMember(sobj->outFileName, "outFileName.");
      R__insp.GenericShowMembers("alcaPhiSym_tree_v3", ( ::alcaPhiSym_tree_v3 * )( (::createHistoryPlots*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_createHistoryPlots(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::createHistoryPlots : new ::createHistoryPlots;
   }
   static void *newArray_createHistoryPlots(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::createHistoryPlots[nElements] : new ::createHistoryPlots[nElements];
   }
   // Wrapper around operator delete
   static void delete_createHistoryPlots(void *p) {
      delete ((::createHistoryPlots*)p);
   }
   static void deleteArray_createHistoryPlots(void *p) {
      delete [] ((::createHistoryPlots*)p);
   }
   static void destruct_createHistoryPlots(void *p) {
      typedef ::createHistoryPlots current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::createHistoryPlots

namespace ROOT {
   void maplEintcOvectorlEpairlEintcOintgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOvectorlEpairlEintcOintgRsPgRsPgR_Dictionary();
   static void *new_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p = 0);
   static void *newArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p);
   static void deleteArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p);
   static void destruct_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,vector<pair<int,int> > >*)
   {
      map<int,vector<pair<int,int> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,vector<pair<int,int> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,vector<pair<int,int> > >", -2, "/afs/cern.ch/cms/slc5_amd64_gcc462/lcg/root/5.32.00-cms5/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,vector<pair<int,int> > >), DefineBehavior(ptr, ptr),
                  0, &maplEintcOvectorlEpairlEintcOintgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,vector<pair<int,int> > >) );
      instance.SetNew(&new_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR);
      instance.SetDelete(&delete_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,vector<pair<int,int> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,vector<pair<int,int> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOvectorlEpairlEintcOintgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,vector<pair<int,int> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<pair<int,int> > > : new map<int,vector<pair<int,int> > >;
   }
   static void *newArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<pair<int,int> > >[nElements] : new map<int,vector<pair<int,int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p) {
      delete ((map<int,vector<pair<int,int> > >*)p);
   }
   static void deleteArray_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p) {
      delete [] ((map<int,vector<pair<int,int> > >*)p);
   }
   static void destruct_maplEintcOvectorlEpairlEintcOintgRsPgRsPgR(void *p) {
      typedef map<int,vector<pair<int,int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,vector<pair<int,int> > >

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/afs/cern.ch/cms/slc5_amd64_gcc462/lcg/root/5.32.00-cms5/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEpairlEintcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEintcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEintcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEintcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEintcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEintcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEintcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<int,int> >*)
   {
      vector<pair<int,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<int,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<int,int> >", -2, "/afs/cern.ch/cms/slc5_amd64_gcc462/lcg/root/5.32.00-cms5/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<int,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEintcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<int,int> >) );
      instance.SetNew(&new_vectorlEpairlEintcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEintcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEintcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEintcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEintcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<int,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<int,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEintcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<int,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEintcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,int> > : new vector<pair<int,int> >;
   }
   static void *newArray_vectorlEpairlEintcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,int> >[nElements] : new vector<pair<int,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEintcOintgRsPgR(void *p) {
      delete ((vector<pair<int,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEintcOintgRsPgR(void *p) {
      delete [] ((vector<pair<int,int> >*)p);
   }
   static void destruct_vectorlEpairlEintcOintgRsPgR(void *p) {
      typedef vector<pair<int,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<int,int> >

namespace ROOT {
   void vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR_Dictionary();
   static void *new_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p);
   static void deleteArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p);
   static void destruct_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >*)
   {
      vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >", -2, "/afs/cern.ch/cms/slc5_amd64_gcc462/lcg/root/5.32.00-cms5/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >) );
      instance.SetNew(&new_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> > : new vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >;
   }
   static void *newArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >[nElements] : new vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p) {
      delete ((vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >*)p);
   }
   static void deleteArray_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p) {
      delete [] ((vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >*)p);
   }
   static void destruct_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgR(void *p) {
      typedef vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/afs/cern.ch/cms/slc5_amd64_gcc462/lcg/root/5.32.00-cms5/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

/********************************************************
* dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JSON */
static int G__dict_397_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JSON* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JSON((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) JSON((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_JSON));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_397_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JSON*) G__getstructoffset())->ReadJSONFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_397_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JSON*) G__getstructoffset())->isGoodLS((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_397_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JSON* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JSON(*(JSON*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_JSON));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JSON G__TJSON;
static int G__dict_397_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JSON*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JSON*) (soff+(sizeof(JSON)*i)))->~G__TJSON();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JSON*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JSON*) (soff))->~G__TJSON();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_397_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JSON* dest = (JSON*) G__getstructoffset();
   *dest = *(JSON*) libp->para[0].ref;
   const JSON& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* alcaPhiSym_tree_v3 */
static int G__dict_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   alcaPhiSym_tree_v3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new alcaPhiSym_tree_v3((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) alcaPhiSym_tree_v3((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new alcaPhiSym_tree_v3[n];
       } else {
         p = new((void*) gvp) alcaPhiSym_tree_v3[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new alcaPhiSym_tree_v3;
       } else {
         p = new((void*) gvp) alcaPhiSym_tree_v3;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((alcaPhiSym_tree_v3*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((alcaPhiSym_tree_v3*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((alcaPhiSym_tree_v3*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((alcaPhiSym_tree_v3*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((alcaPhiSym_tree_v3*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((alcaPhiSym_tree_v3*) G__getstructoffset())->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((alcaPhiSym_tree_v3*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((alcaPhiSym_tree_v3*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   alcaPhiSym_tree_v3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new alcaPhiSym_tree_v3(*(alcaPhiSym_tree_v3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef alcaPhiSym_tree_v3 G__TalcaPhiSym_tree_v3;
static int G__dict_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (alcaPhiSym_tree_v3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((alcaPhiSym_tree_v3*) (soff+(sizeof(alcaPhiSym_tree_v3)*i)))->~G__TalcaPhiSym_tree_v3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (alcaPhiSym_tree_v3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((alcaPhiSym_tree_v3*) (soff))->~G__TalcaPhiSym_tree_v3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   alcaPhiSym_tree_v3* dest = (alcaPhiSym_tree_v3*) G__getstructoffset();
   *dest = *(alcaPhiSym_tree_v3*) libp->para[0].ref;
   const alcaPhiSym_tree_v3& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lumiIntervals */
static int G__dict_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lumiIntervals* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new lumiIntervals((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) lumiIntervals((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_549_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const lumiIntervals*) G__getstructoffset())->numberOfIntervals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_549_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const lumiIntervals*) G__getstructoffset())->intervalNumber((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const lumiIntervals*) G__getstructoffset())->intervalTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lumiIntervals::runLS* pobj;
         const lumiIntervals::runLS xobj = ((const lumiIntervals*) G__getstructoffset())->lsStart((int) G__int(libp->para[0]));
         pobj = new lumiIntervals::runLS(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lumiIntervals::runLS* pobj;
         const lumiIntervals::runLS xobj = ((const lumiIntervals*) G__getstructoffset())->lsEnd((int) G__int(libp->para[0]));
         pobj = new lumiIntervals::runLS(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lumiIntervals* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lumiIntervals(*(lumiIntervals*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lumiIntervals G__TlumiIntervals;
static int G__dict_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lumiIntervals*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lumiIntervals*) (soff+(sizeof(lumiIntervals)*i)))->~G__TlumiIntervals();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lumiIntervals*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lumiIntervals*) (soff))->~G__TlumiIntervals();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lumiIntervals* dest = (lumiIntervals*) G__getstructoffset();
   *dest = *(lumiIntervals*) libp->para[0].ref;
   const lumiIntervals& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* createHistoryPlots */
static int G__dict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   createHistoryPlots* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new createHistoryPlots((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) createHistoryPlots((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new createHistoryPlots[n];
       } else {
         p = new((void*) gvp) createHistoryPlots[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new createHistoryPlots;
       } else {
         p = new((void*) gvp) createHistoryPlots;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_createHistoryPlots));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((createHistoryPlots*) G__getstructoffset())->setLumiIntervals((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((createHistoryPlots*) G__getstructoffset())->setJSON((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((createHistoryPlots*) G__getstructoffset())->setOutfile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   createHistoryPlots* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new createHistoryPlots(*(createHistoryPlots*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_createHistoryPlots));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef createHistoryPlots G__TcreateHistoryPlots;
static int G__dict_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (createHistoryPlots*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((createHistoryPlots*) (soff+(sizeof(createHistoryPlots)*i)))->~G__TcreateHistoryPlots();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (createHistoryPlots*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((createHistoryPlots*) (soff))->~G__TcreateHistoryPlots();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   createHistoryPlots* dest = (createHistoryPlots*) G__getstructoffset();
   *dest = *(createHistoryPlots*) libp->para[0].ref;
   const createHistoryPlots& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JSON */

/* alcaPhiSym_tree_v3 */

/* lumiIntervals */

/* createHistoryPlots */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dictLN_createHistoryPlots))) {
     createHistoryPlots *G__Lderived;
     G__Lderived=(createHistoryPlots*)0x1000;
     {
       alcaPhiSym_tree_v3 *G__Lpbase=(alcaPhiSym_tree_v3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dictLN_createHistoryPlots),G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("aLSSegment",117,G__get_linked_tagnum(&G__dictLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__dictLN_JSON));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<aLSSegment>",117,G__get_linked_tagnum(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GoodLSVector",117,G__get_linked_tagnum(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_JSON));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,GoodLSVector>",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<pair<int,int>,allocator<pair<int,int> > > >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<pair<int,int>,allocator<pair<int,int> > >,less<int> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LSRange",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_JSON));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<int,GoodLSVector>",117,G__get_linked_tagnum(&G__dictLN_pairlEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_JSON));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LSRangeElement",117,G__get_linked_tagnum(&G__dictLN_pairlEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_JSON));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<runLS,runLS>",117,G__get_linked_tagnum(&G__dictLN_pairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgR),0,G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("interval_t",117,G__get_linked_tagnum(&G__dictLN_pairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgR),0,G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<interval_t>",117,G__get_linked_tagnum(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<lumiIntervals::runLS,lumiIntervals::runLS> >",117,G__get_linked_tagnum(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JSON */
static void G__setup_memvarJSON(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_JSON));
   { JSON *p; p=(JSON*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"oldRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("LSRange"),-1,4,"goodLS_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator),G__defined_typename("const_iterator"),-1,4,"goodLSCache_=",0,"ptr to list of good LS for last run");
   }
   G__tag_memvar_reset();
}


   /* alcaPhiSym_tree_v3 */
static void G__setup_memvaralcaPhiSym_tree_v3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3));
   { alcaPhiSym_tree_v3 *p; p=(alcaPhiSym_tree_v3*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->nhit_barl)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nhit_barl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLTNamesLen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"HLTNamesLen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLTNames)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"HLTNames=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLTResults)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"HLTResults=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nL1bits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nL1bits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L1bits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"L1bits[128]=",0,"[nL1bits]");
   G__memvar_setup((void*)((long)(&p->nL1bitsTech)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nL1bitsTech=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L1bitsTech)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"L1bitsTech[64]=",0,"[nL1bitsTech]");
   G__memvar_setup((void*)((long)(&p->vxMC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vxMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vyMC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vyMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vzMC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vzMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvertex)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nvertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotX0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotY0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotY0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotZ0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotZ0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotSigmaX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotSigmaX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotSigmaY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotSigmaY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamSpotSigmaZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beamSpotSigmaZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ieta)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ieta[1000]=",0,"[nhit_barl]");
   G__memvar_setup((void*)((long)(&p->iphi)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"iphi[1000]=",0,"[nhit_barl]");
   G__memvar_setup((void*)((long)(&p->lc_barl)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lc_barl[1000]=",0,"[nhit_barl]");
   G__memvar_setup((void*)((long)(&p->alpha_barl)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"alpha_barl[1000]=",0,"[nhit_barl]");
   G__memvar_setup((void*)((long)(&p->et_barl)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"et_barl[1000]=",0,"[nhit_barl]");
   G__memvar_setup((void*)((long)(&p->unixtime)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"unixtime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lumi)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"lumi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventid)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"eventid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nhit_endc)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nhit_endc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ix)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ix[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->iy)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"iy[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->sign)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"sign[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->lc_endc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lc_endc[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->alpha_endc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"alpha_endc[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->et_endc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"et_endc[1000]=",0,"[nhit_endc]");
   G__memvar_setup((void*)((long)(&p->b_nhit_barl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_nhit_barl=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_HLTNamesLen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_HLTNamesLen=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_HLTNames)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_HLTNames=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_HLTResults)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_HLTResults=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nL1bits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_nL1bits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_L1bits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_L1bits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nL1bitsTech)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_nL1bitsTech=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_L1bitsTech)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_L1bitsTech=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vxMC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_vxMC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vyMC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_vyMC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vzMC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_vzMC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nvertex)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_nvertex=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotX0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotX0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotY0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotY0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotZ0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotZ0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotSigmaX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotSigmaX=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotSigmaY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotSigmaY=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_beamSpotSigmaZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_beamSpotSigmaZ=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ieta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_ieta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_iphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_iphi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lc_barl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_lc_barl=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_alpha_barl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_alpha_barl=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_et_barl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_et_barl=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_unixtime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_unixtime=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_run)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_run=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lumi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_lumi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_eventid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_eventid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nhit_endc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_nhit_endc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ix)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_ix=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_iy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_iy=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_sign)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_sign=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lc_endc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_lc_endc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_alpha_endc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_alpha_endc=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_et_endc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_TBranch),-1,-1,1,"b_et_endc=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lumiIntervals */
static void G__setup_memvarlumiIntervals(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   { lumiIntervals *p; p=(lumiIntervals*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR),G__defined_typename("vector<interval_t>"),-1,4,"intervals=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"intervals_time=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* createHistoryPlots */
static void G__setup_memvarcreateHistoryPlots(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_createHistoryPlots));
   { createHistoryPlots *p; p=(createHistoryPlots*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->intervals)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_lumiIntervals),-1,-1,1,"intervals=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodLS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictLN_JSON),-1,-1,1,"goodLS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictLN_TString),-1,-1,1,"outFileName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJSON(void) {
   /* JSON */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_JSON));
   G__memfunc_setup("JSON",314,G__dict_397_0_1, 105, G__get_linked_tagnum(&G__dictLN_JSON), -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadJSONFile",1078,G__dict_397_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - json", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodLS",772,G__dict_397_0_3, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - run i - - 0 - lumi", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("JSON", 314, G__dict_397_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictLN_JSON), -1, 0, 1, 1, 1, 0, "u 'JSON' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JSON", 440, G__dict_397_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_397_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictLN_JSON), -1, 1, 1, 1, 1, 0, "u 'JSON' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncalcaPhiSym_tree_v3(void) {
   /* alcaPhiSym_tree_v3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3));
   G__memfunc_setup("alcaPhiSym_tree_v3",1794,G__dict_544_0_1, 105, G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__dict_544_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__dict_544_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__dict_544_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__dict_544_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__dict_544_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,G__dict_544_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__dict_544_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("alcaPhiSym_tree_v3", 1794, G__dict_544_0_9, (int) ('i'), G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3), -1, 0, 1, 1, 1, 0, "u 'alcaPhiSym_tree_v3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~alcaPhiSym_tree_v3", 1920, G__dict_544_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_544_0_11, (int) ('u'), G__get_linked_tagnum(&G__dictLN_alcaPhiSym_tree_v3), -1, 1, 1, 1, 1, 0, "u 'alcaPhiSym_tree_v3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclumiIntervals(void) {
   /* lumiIntervals */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_lumiIntervals));
   G__memfunc_setup("lumiIntervals",1391,G__dict_549_0_1, 105, G__get_linked_tagnum(&G__dictLN_lumiIntervals), -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfIntervals",1782,G__dict_549_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intervalNumber",1486,G__dict_549_0_3, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - run i - - 0 - ls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("intervalTime",1268,G__dict_549_0_4, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - interval_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lsStart",749,G__dict_549_0_5, 117, G__get_linked_tagnum(&G__dictLN_lumiIntervalscLcLrunLS), -1, 0, 1, 1, 1, 8, "i - - 0 - interval_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lsEnd",502,G__dict_549_0_6, 117, G__get_linked_tagnum(&G__dictLN_lumiIntervalscLcLrunLS), -1, 0, 1, 1, 1, 8, "i - - 0 - interval_index", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("lumiIntervals", 1391, G__dict_549_0_7, (int) ('i'), G__get_linked_tagnum(&G__dictLN_lumiIntervals), -1, 0, 1, 1, 1, 0, "u 'lumiIntervals' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lumiIntervals", 1517, G__dict_549_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_549_0_9, (int) ('u'), G__get_linked_tagnum(&G__dictLN_lumiIntervals), -1, 1, 1, 1, 1, 0, "u 'lumiIntervals' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccreateHistoryPlots(void) {
   /* createHistoryPlots */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_createHistoryPlots));
   G__memfunc_setup("createHistoryPlots",1912,G__dict_560_0_1, 105, G__get_linked_tagnum(&G__dictLN_createHistoryPlots), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setLumiIntervals",1691,G__dict_560_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJSON",646,G__dict_560_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - jsonFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutfile",1060,G__dict_560_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - jsonFile", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("createHistoryPlots", 1912, G__dict_560_0_6, (int) ('i'), G__get_linked_tagnum(&G__dictLN_createHistoryPlots), -1, 0, 1, 1, 1, 0, "u 'createHistoryPlots' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~createHistoryPlots", 2038, G__dict_560_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_560_0_8, (int) ('u'), G__get_linked_tagnum(&G__dictLN_createHistoryPlots), -1, 1, 1, 1, 1, 0, "u 'createHistoryPlots' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__dictLN_JSON = { "JSON" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR = { "map<int,vector<pair<int,int>,allocator<pair<int,int> > >,less<int>,allocator<pair<const int,vector<pair<int,int>,allocator<pair<int,int> > > > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgR = { "pair<int,vector<pair<int,int>,allocator<pair<int,int> > > >" , 115 , -1 };
G__linked_taginfo G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<int,vector<pair<int,int>,allocator<pair<int,int> > >,less<int>,allocator<pair<const int,vector<pair<int,int>,allocator<pair<int,int> > > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__dictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_alcaPhiSym_tree_v3 = { "alcaPhiSym_tree_v3" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_lumiIntervals = { "lumiIntervals" , 99 , -1 };
G__linked_taginfo G__dictLN_lumiIntervalscLcLrunLS = { "lumiIntervals::runLS" , 115 , -1 };
G__linked_taginfo G__dictLN_pairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgR = { "pair<lumiIntervals::runLS,lumiIntervals::runLS>" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR = { "vector<pair<lumiIntervals::runLS,lumiIntervals::runLS>,allocator<pair<lumiIntervals::runLS,lumiIntervals::runLS> > >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<lumiIntervals::runLS,lumiIntervals::runLS>,allocator<pair<lumiIntervals::runLS,lumiIntervals::runLS> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_createHistoryPlots = { "createHistoryPlots" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_TString.tagnum = -1 ;
  G__dictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_pairlEintcOintgR.tagnum = -1 ;
  G__dictLN_JSON.tagnum = -1 ;
  G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_pairlEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__dictLN_TTree.tagnum = -1 ;
  G__dictLN_TBranch.tagnum = -1 ;
  G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_alcaPhiSym_tree_v3.tagnum = -1 ;
  G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_lumiIntervals.tagnum = -1 ;
  G__dictLN_lumiIntervalscLcLrunLS.tagnum = -1 ;
  G__dictLN_pairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgR.tagnum = -1 ;
  G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_createHistoryPlots.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictLN_TString);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEintcOintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_JSON),sizeof(JSON),-1,294912,(char*)NULL,G__setup_memvarJSON,G__setup_memfuncJSON);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__dictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_alcaPhiSym_tree_v3),sizeof(alcaPhiSym_tree_v3),-1,263424,(char*)NULL,G__setup_memvaralcaPhiSym_tree_v3,G__setup_memfuncalcaPhiSym_tree_v3);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_lumiIntervals),sizeof(lumiIntervals),-1,294912,(char*)NULL,G__setup_memvarlumiIntervals,G__setup_memfunclumiIntervals);
   G__get_linked_tagnum_fwd(&G__dictLN_lumiIntervalscLcLrunLS);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRcOallocatorlEpairlElumiIntervalscLcLrunLScOlumiIntervalscLcLrunLSgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_createHistoryPlots),sizeof(createHistoryPlots),-1,263424,(char*)NULL,G__setup_memvarcreateHistoryPlots,G__setup_memfunccreateHistoryPlots);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

